Задание 1. Пара-Тройка кортежей

Создайте два класса для хранения кортежей - упорядоченного списка элементов определенных типов
Pair - содержит пару таких элементов.
Triple - содержит тройку таких элементов.

у каждого класса создайте методы, которые возвращают элементы на определенных позициях.
 - getFirst
 - getSecond
 - getThird (только для Triple)

У каждого класса создайте конструктор со 2(Pair) или тремя (Triple) параметрами нужного типа.

Для каждого класса определите методы equals и hashCode.

Пример использования
Pair<String, Integer> lastNameToAge = new Pair<> ("Пупкин", 18);
String lastName = lastNameToAge.geFirst();
Integer age = lastNameToAge.getSecond();

Pair<String, List<String>> lastNameToPhoneNumbers = new Pair<>("Пупкин", Arrays.asList("+7 831 2112233", "+7 920 000 22 22"))
String lastName = lastNameToPhoneNumbers.geFirst();
List<String> phoneNumbers = lastNameToPhoneNumbers.getSecond();

Аналогично  с Triple, только параметра типа и параметров констркторов должно быть 3.


Задание А. Работа с парами:
Создайте класс Animal с полями имя(String) и тип животного (тоже String)
Создайте список, состоящий из нескольких пар: животное и любимое блюдо(String) этого животного.


Создайте метод feedAnimals(List<Pair<Animal,String>>);
ЛОгика работы этого метода такая:
Для каждого животного выводится надпись:
"Животное %ИМЯ с радостью съедает %БЛЮДО

+ в этом методе сгенерируйте случайное число от 0 до размера списка с животными.
Это - номер животного, которое сегодня получит двойною порцию любимой еды.
Для такого животного выведите надпись
"Счастливое животное %имя получает двойную порцию %БЛЮДО"

Замечания: вы можете справедливо заметить, что любимое блюдо вполне можно было объявить полем класса.
Но иногда удобнее дополнительное поле вынести за рамки класса, например:
- Когда  у вас есть библиотечный класс и вы не можете его менять.
- Когда поле нужно использовать один раз, чтобы не засорять класс доп. полями.


Задание Б. Списки, списки...

Сейчас будем выводить разные списки и как-то их обрабатывать:

Список с бензоколонками и ценами на бензин.
Цены хранятся в списке троек:
- Адрес бензоколонки - строка
- Тип бензина - enum, возможные значения: ДТ, АИ-92, АИ-95, АИ-98
- Цена - double


Создайте список List<Triple<String,GasolineType,Double>> и заполните его данными о нескольких бензоколоноках.

Создайте метод findBestPrice(List<Triple<String,GasolineType,Double>> list,GasolineType type ) который выводит на экран
адрес бензоколонки с самой маленькой ценой на переданный тип бензина

Список приложений на телефон:
Приложения хранятся в списке троек:
- Название приложения - строка
- Количество оценок - double
- Средний рейтинг - double от 1 до 5.

Создайте список List<Triple<String,Double,Double>>
создайте функции, которые на вход принимают этот список и выводят:
- Все приложения, отсортированные по количеству оценок
- Приложение с самым лучшим рейтингом
- Приложение с самым худшим рейтингом