// Задание 4. Битвы магов.


//Конкретные персонажи бывают двух типов:
//Игра - пошаговая. В каждый ход все персонажи со сцены делают одно действие:
//монстр атакует кого-то, а маг читает любое известное ему заклинание.
//
//Порядок, в котором персонажи выполняют действия может быть любым, например по номеру позиции или как вы сами решите.
//Каждый персонаж сам за себя, если на сцене остался только один персонаж - то игра завершается и на экран выводится имя и тип (маг, монстр) победившего персонажа.
//
//Создайте сцену со случайным количеством случайных персонажей, запустите игру.
//
//Замечания к заданию:
//Обратите внимание, что многие вещи я намеренно не стал детализировать.
//Например, в каких классах располагаются методы, отвечающие за нанесение урона и вывод сообщений на экран,
//кто управляет сценой и ходами, как происходит генерация начальной сцены, какая книга заклинаний будет у каждого мага,
//кого атакуют монстры или какое заклинание читает маг и т.п.
//
//Ваша задача - проанализировать требования и сделать такую структуру классов, которая будет решать эти требованиях, чтобы код был минимальным, понятным и расширяемым.
//
//При проектировании структуры классов помните про "правила хорошего программирования":
//- Дублирование кода обычно плохо
//- Код должен быть простым и расширяемым.
//
//Например, что будет, если в игру добавится новый персонаж с какими-то новыми способностями ( рыцарь, который от всех заклинаний получает только половину урона или разбойник, который имеет некоторый шанс уклониться от атаки монстра)?
//- Пользуйтесь отладчиком, вот здесь видео, где подробно рассказано, как это сделать https://www.youtube.com/watch?v=Z1BQsf0A4xY

import character.GameCharacter;

public class WizardBattle {

    public static void main(String[] args) {

        Scene scene = new Scene();

        int step = 0;
        System.out.println("Starting");
        System.out.println("Scene alive characters: " + scene.countAliveCharacters());
        while (scene.countAliveCharacters() > 1)
        {
            System.out.println("step: " + step++);
                for (GameCharacter character : scene.getAliveCharacters()) {
                        //System.out.println("scene: " + Arrays.toString(scene.getAliveCharacters()));
                        //System.out.println("текущий персонаж: " + character);
                        character.nextMove(scene.getAliveCharacters());
                        scene.removeDeadCharacters();
                }
            //System.out.println("scene size: " + scene.getAliveCharacters().length);
        }
        System.out.println(scene.getWinners().size() > 0 ? "победил: " + scene.getWinners() : "никто не победил");
    }
}