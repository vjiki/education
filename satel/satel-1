 // Вернуть результат: все неотрицательные четные числа, которые
// содержатся в in при помощи Stream API
public static List<Integer> func(List<Integer> in){

   List<Integer> list = in.stream().filter(x->(x%2=0 && x>=0)).collect(Collectors.toList())
}







// Результат: ряд Фибоначчи(следующий член ряда равен сумме двух предыдущих).
// n - количество членов ряда
// Пример для n = 9: 0, 1, 1, 2, 3, 5, 8, 13, 21
// Задание со*: сделать это при помощи Stream API
public static String fibonacci(int n){
  		if (n <= 0)
        return "";
  		if (n = 0)
        return "0";
  		if (n = 1)
        return "0, 1";

			int[] array = new int[n];
 			array[0] = 0;
      array[1] = 1;
  		for(i=2; i<n; i++){
        	array[i] = array[i-2]+array[i-1];
          }
        return Arrays.toString(array);
      }
}

}
